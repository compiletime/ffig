{% import 'go.macros' as go_macros %}
// This code was generated by FFIG <http://ffig.org>.
// Manual edits will be lost.

package {{module.name}}

// #cgo CFLAGS: -std=c11 -I${SRCDIR} -DSOURCE_PATH=${SRCDIR}
// #cgo LDFLAGS: -ldl
// #include "{{module.name}}.go.h"
import "C"

import (
    "os"
)

func init() {
    if status := int(C.init()); status != 0 {
        os.Exit(status)
    }
}
{% for class in classes %}
{% for impl in class.impls %}

type {{impl.name}} struct {
    ptr C.{{module.name}}_{{class.name}}
}
{% endfor %}
{% endfor %}
{% for class in classes %}
{% for impl in class.impls %}
{% for method in impl.constructors %}

func {{ impl.name }}_create({{go_macros.go_method_parameters(method, impl)}})({{impl.name}}, bool) {
    var pv C.RT_{{module.name}}_{{impl.name}}_create
    pv = C.CGo_{{module.name}}_{{impl.name}}_create({{go_macros.go_arguments_to_c_arguments(module, method)}})

    var obj {{impl.name}}

    if pv.status == 0 {
        obj.ptr = pv.ptr
        return obj, false
    } else {
        return obj, true
    }
}
{% endfor %}
{% endfor %}
{% endfor %}
{% for class in classes %}
{% for impl in class.impls %}
{% for method in class.methods %}

func (obj {{impl.name}}) {{method.name|to_go_method_name}}({{go_macros.go_method_parameters(method, impl)}})
        {%- if not method.returns_void -%}
            ({{method.return_type|to_go(impl)}}, bool)
        {%- else -%}
            bool
        {%- endif %} {
    var rv C.RT_{{module.name}}_{{class.name}}_{{method.name}}
    rv = C.CGo_{{module.name}}_{{class.name}}_{{method.name}}(
            obj.ptr {{go_macros.go_arguments_to_c_arguments_extract_go_object(method, leading_comma=True)}})
    
    if rv.status == 0 {
        {% if not method.returns_void %}
        value := {{method.return_type|to_go_convert}}(rv.value);
        return value, false
        {% else %}return rv.status{% endif %}
    } else {
        {% if not method.returns_void %}
        var value {{method.return_type|to_go(impl)}}
        return value, false
        {% else %}return rv.status{% endif %}
    }
}
{% endfor %}
{% endfor %}
{% endfor %}
